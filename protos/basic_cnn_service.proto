// Define a basic gRPC service for AI operations.
syntax = "proto3";

package basic_ai_service;

import "basic_ai_infra.proto";

// Interface exported by the server.
service BasicCNNService {

  rpc GetCurrentLoadedModel(basic_ai_infra.Empty)
      returns (basic_ai_infra.ModelInfo) {}

  // Loads a dataset from a file.
  //
  // A summary of the loading process is returned.
  rpc LoadSampleData(basic_ai_infra.SampleData)
      returns (stream basic_ai_infra.LoadingSummary) {}

  // Loads a trained model from a file.
  //
  // A summary of the loading process is returned.
  rpc LoadTrainedModel(basic_ai_infra.KerasModel)
      returns (stream basic_ai_infra.LoadingSummary) {}

  // Loads the default CNN model.
  //
  // A summary of the loading pr ocess is returned.
  rpc LoadDefaultModel(basic_ai_infra.LoadingParameters)
      returns (stream basic_ai_infra.LoadingSummary) {}

  // Trains a model using the loaded dataset.
  //
  // A summary of the training process is returned.
  rpc TrainModel(basic_ai_infra.TrainingParameters)
      returns (stream basic_ai_infra.TrainingSummary) {}

  // Infer a result from a given data point.
  //
  // The result is returned.
  rpc WhatImageIsThis(basic_ai_infra.Base64Image)
      returns (stream basic_ai_infra.InferingResult) {}
}
